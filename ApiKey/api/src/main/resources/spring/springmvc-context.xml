<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置容器组件的扫描包
        用来指定DispatcherServlet将哪个包中的类进行扫描
        扫描这些类的注解，根据其注解将这些类实例化，作为容器中的组件
        base-package属性即设置要扫描的包
        容器中包括Controller，Service，Handler
     --><!-- 
    <context:annotation-config/>
    <context:component-scan base-package="com.*.service"/> 
    <context:component-scan base-package="com.*.service.impl"/> -->

    <!-- 配置根视图：欢迎视图，首页 -->
    <mvc:view-controller path="/" view-name="index.jsp"/>
    
    <!-- 配置静态资源的请求映射关系 -->
    <!--     <mvc:resources location="/static/" mapping="/static/**"></mvc:resources> -->
    
    <!-- 配置SpringMVC的注解驱动
        让SpringMVC去加载默认的各种Handler，Adapter
     -->
    <mvc:annotation-driven></mvc:annotation-driven>
         
    <!-- 视图解析器
        将Controller返回的String与prefix和suffix拼接成结果视图的资源
        prefix + return + suffix
        /WEB-INF/pages/success.jsp
     -->
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--         视图解析器的前缀 -->
        <property name="prefix" value="/"/>
<!--         视图解析器的后缀 -->
        <property name="suffix" value=".html"/>
        <property name="order" value="1"></property>
    </bean>
    
    
    <!-- 配置拦截器列表 -->
<!--     <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="AllowCrossDomainInterceptor"
            class="edu.nobel.interceptor.AllowCrossDomainInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors> -->
    
    <!-- 配置自定义异常处理 -->
    <!-- <bean id="ExceptionHandler" class="edu.nobel.exception.ExceptionHandler" /> -->

</beans>